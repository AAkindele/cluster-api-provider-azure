apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  labels:
    nodepool: nodepool-0
spec:
  replicas: 2
  clusterName: ${CLUSTER_NAME}
  selector:
    matchLabels:
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        nodepool: nodepool-0
    spec:
      version: ${KUBERNETES_VERSION}
      clusterName: ${CLUSTER_NAME}
      bootstrap:
        configRef:
          name: ${CLUSTER_NAME}-md-0
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ${CLUSTER_NAME}-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AzureMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      location: ${AZURE_LOCATION}
      vmSize: ${NODE_MACHINE_TYPE}
      osDisk:
        osType: "Linux"
        diskSizeGB: 30
        managedDisk:
          storageAccountType: "Premium_LRS"
      sshPublicKey: ${SSH_PUBLIC_KEY}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data["local_hostname"] }}'
          kubeletExtraArgs:
            cloud-provider: azure
            cloud-config: /etc/kubernetes/azure.json
      files:
        - path: /etc/kubernetes/azure.json
          owner: "root:root"
          permissions: "0644"
          content: |
            {
              "cloud": "AzurePublicCloud",
              "tenantId": "${AZURE_TENANT_ID}",
              "subscriptionId": "${AZURE_SUBSCRIPTION_ID}",
              "aadClientId": "${AZURE_CLIENT_ID}",
              "aadClientSecret": "${AZURE_CLIENT_SECRET}",
              "resourceGroup": "${CLUSTER_NAME}",
              "securityGroupName": "${CLUSTER_NAME}-node-nsg",
              "location": "${AZURE_LOCATION}",
              "vmType": "standard",
              "vnetName": "${CLUSTER_NAME}",
              "vnetResourceGroup": "${CLUSTER_NAME}",
              "subnetName": "${CLUSTER_NAME}-node-subnet",
              "routeTableName": "${CLUSTER_NAME}-node-routetable",
              "loadBalancerSku": "standard",
              "maximumLoadBalancerRuleCount": 250,
              "useManagedIdentityExtension": false,
              "useInstanceMetadata": true
            }
